

Document Control Information:

The official version of this document is kept in CMVC in the aix family, release des.dev, component design.it1, file designs/it1/it1_2_for_sync_all/it1_2_for_sync_all.html. Users of this document are personally responsible for using the official version and for verifying that any copies of the document, in whole or in part, are of the official version. If this document is not a copy of the official version, it is obsolete.

CMVC Extraction Information: %W% %H% %I% sccsid

CMVC_Family=aix, CMVC_Release=test.dev, CMVC_Component=test.values


This document is IBM Confidential.

Reviewers: Please click the 'Reviewed' check-box beside your name to indicate your participation in the review.

Reviewer	Reviewed
Bardia Mahjour	
Barnaby Dalton	
Claudio Rossi	
Daniel C Chen	
David Forster	
Francesco Cassullo	
Grigor Nikolov	
Guirlyn Olivar	
Jeff Heath	
Jim Xia	
Jin L Li	
	
Reviewer	Reviewed
Kelvin Li	
Mark Yamashita	
Michelle Zhang	
Rafik Zurob	
Shahid Alam	
Tiberiu Toth	
Vicky Chin	
Xing Xue	
Ying Zhang	
Youssef Himo	
andychen@ca.ibm.com	

Document Title
	

IT1/2 for SYNC ALL

CMVC Feature Number:
	

379697

Feature Title:
	

Author(s):
	

David Forster

Mandatory Reviewers:

(Approver)
	

Xing Xue, Grigor Nikolov, Jim Xia

Component Reviewers:(optional participation)
	

Bardia Mahjour, Barnaby Dalton, Daniel C Chen, Jeff Heath, Kelvin Li, Mark Yamashita, Rafik Zurob, Youssef Himo

Team Reviewers: (optional participation)
	

Claudio Rossi, Francesco Cassullo, Jin L Li, Michelle Zhang, Shahid Alam, Tiberiu Toth, Vicky Chin, Ying Zhang, andychen@ca.ibm.com

IT1 Status: For Approval

Approvers Only: Click on the 'Approve' checkbox beside your name in the table below if you agree with the technical and user interface content of this document; not checking your 'approve' checkbox signifies you do not approve.

Approver	Approved
Grigor Nikolov	
Jim Xia	
Xing Xue	

Approval Comments
Access Change History
Access Change History

Overview

SYNC ALL is a new statement to perform synchronization of all images.

Syntax:

R858 	sync-all-stmt 	is 	SYNC ALL [ ( [sync-stat-list] ) ]
R859 	sync-stat 	is 	STAT = stat-variable
		or 	ERRMSG = errmsg-variable
C851 No specifier shall appear more than once in a given sync-stat-list.

Associated variables:

A stat-variable is a scalar-int-variable which is assigned a status code on completion of the statement; an errmsg-variable is a scalar-default-char-variable which is assigned an explanatory message in the case of an error condition (and only in the case of an error: it is unchanged if no error condition arises).

The effect of the SYNC ALL statement is to cause an image M to wait before executing the segment following the SYNC ALL statement until all other images have executed as many SYNC ALL statements as the image M.

The stat-variable is 0 on success, and has the value STAT_STOPPED_IMAGE (from ISO_FORTRAN_ENV) if another image has initiated termination. Otherwise, the value is a processor-dependent positive integer value different from STAT_STOPPED_IMAGE.

Image control statements:

The SYNC ALL statement is an image control statement, like the statements CRITICAL, END CRITICAL, LOCK, UNLOCK, SYNC IMAGES, SYNC MEMORY, ALLOCATE (on a coarray allocate-object), DEALLOCATE (on a coarray allocate-object), STOP, END, and "any statement that completes execution of a block or procedure and which results in the implicit deallocation of a coarray;" With the exception of the first four (CRITICAL to UNLOCK), all of these include the effect of executing a SYNC MEMORY statement. Care must be taken in the sequencing of such statements, to avoid suspending execution indefinitely (the standard cites as potentially problematic the example of one image allocating a coarray allocate-object at the same time as another image executes a SYNC ALL statement).


Test Strategy

Because a separate bucket will exist for testing SYNC MEMORY, this aspect of SYNC ALL will not be tested explicitly. Instead, the focus will be on the synchronisation of program segments across all images. Also, because interruptible barriers are not part of this phase of development, a test of the stat-variable being set to STAT_STOPPED_IMAGE under the conditions noted above will not be part of this test, but will come later.

Diagnostic tests will be minimal, and restricted to syntax/type checks. Although users can make significant errors in the use of the SYNC ALL statement otherwise, such as unequal counts of SYNC ALL statements in the different images, we will not test these cases, since these cannot be distinguished from legitimate cases where an image runs for an extremely long time before encountering a SYNC ALL statement.

Tests should verify that programs can make progress (i.e., that the program can complete in the presence of SYNC ALL statements, providing they are correctly used), that stat-variables and errmsg-variables are correctly defined, that images do, in fact, wait at a SYNC ALL until all have arrived, and that SYNC ALL statements in different program units (main program, subroutine, etc.) work correctly and interchangeably.


Test Procedures/Scenarios

Test cases Diagnostics
Name 	Description 	Expected Results
saStatNonIntd 	diagnostic message on non-integer or array stat-variable 	diagnostic messages
saErrmsgNonChard 	diagnostic message on non-character or array errmsg-variable 	diagnostic messages
saSyncStatd 	diagnostic message on incorrect sync-stat entry 	diagnostic messages
Functional
Name 	Description 	Expected Results
saBasic 	basic test of progress 	all images complete, expected number of reports from images
saBasicMessage 	errmsg variable is not altered on no error 	rc=0
saBasicMessageOne 	errmsg variable is not altered on no error - one image 	rc=0
saBasicOne 	basic test of progress - one image 	image completes, reports "Before" and "After"
saBasicStatus 	basic test of progress + status 	no report of "Non-zero status"
saBasicStatusOne 	basic test of progress + status - one image 	no report of "Non-zero status"
saBasicSync 	basic test of synchronisation 	rc=0
saBasicSyncOne 	basic test of synchronisation - one image 	rc=0
saBasicStatusNMsg 	images complete, status is 0, message is not overwritten on success 	rc=0, image completes, reports "Before" and "After"
saExternNMain 	external procedures and main program 	rc=0
saInternNExtern 	internal and external procedures 	rc=0
saMainNModule 	synchronisation from main program and module procedures 	rc=0
saModuleNIntern 	synchronisation from module procedures and internal procedures 	rc=0
saProgramUnit 	synchronisation from different contexts in program unit 	rc=0

One unit test case exists: F2008/coarray/unit_test/gasnetBarrier.scenario, which tests the sync all statement executed repeatedly in a loop.


IT2 Information

Release: tstdev
Component: xlftest
Location:
F2008/coarray/syncAll/

Appendices/References


Terms of use
