XL Fortran Enterprise Edition DEV Version for AIX (XL Fortran DEV)  Version 10.01.0000.9999 --- deferlen13.f 02/20/06 21:47:57
   <program init stmt> ::=
 pass= 1  prod# +mai-36   (act=36)    mpx= 1 spx= 2
   <program prefix> ::= <program init stmt> END_START_OPTIONS
 pass= 1  prod# +mai-45   (act=45)    mpx= 1 spx= 1
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         32              CR              ESCAPE          I4
         NOLIBESSL       NOLIBPOSIX      OBJECT          STDFRAMEWORK
         SWAPOMP         UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         MAXMEM(8192)          SPILLSIZE(512)        STACKTEMP(0)
  
  
         ==  Options Of Character Type  ==
         ALIAS(STD,NOINTPTR)   ALIGN(BINDC(POWER),STRUCT(NATURAL))
         ARCH(COM)             AUTODBL(NONE)         DIRECTIVE(IBM*)
         ENUM()                FLAG(I,I)             FLOAT(MAF,FOLD,RNGCHK)
         FREE(F90)             HALT(S)               IEEE(NEAR)
         INTSIZE(4)            LIST()                LANGLVL(EXTENDED)
         REALSIZE(4)           TUNE(PWR3)            UNROLL(AUTO)
         XFLAG()               XLF2003(POLYMORPHIC,BOZLITARGS,SIGNDZEROINTR)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
  <program prefix part> ::= <program prefix>
pass= 1  prod# +mai-50   (act=50)    mpx= 1 spx= 1
  <program header part> ::= <program prefix part>
pass= 1  prod# +mai-55   (act=55)    mpx= 1 spx= 1
  <specification beg> ::= <program header part>
pass= 1  prod# .dcl-181  (act=581)   mpx= 2 spx= 2
  <implicit kwd> ::= IMPLICIT
pass= 1  prod# .dcl-521  (act=921)   mpx= 3 spx= 3
  <type keyword> ::= CHARACTER
pass= 1  prod# .dcl-542  (act=942)   mpx= 5 spx= 6
  <type kind ceq> ::= CHARLEN equals
pass= 1  prod# .dcl-535  (act=935)   mpx= 6 spx= 6
  <exporstarorcol> ::= colon
pass= 1  prod# .dcl-537  (act=937)   mpx= 4 spx= 7
  <type kind> ::= lparen <type kind ceq> <exporstarorcol> rparen
pass= 1  prod# .dcl-461  (act=861)   mpx= 3 spx= 4
  <type kwd unit> ::= <type keyword> <type kind>
pass= 1  prod# .dcl-176  (act=576)   mpx= 3 spx= 7
  <implied unit head> ::= <type kwd unit> lparen IDENTIFIER minus IDENTIFIER
pass= 1  prod# .dcl-174  (act=574)   mpx= 3 spx= 4
  <implied> ::= <implied unit head> rparen
pass= 1  prod# .dcl-172  (act=572)   mpx= 2 spx= 3
  <implicit typestmt> ::= <implicit kwd> <implied>
pass= 1  prod# +mai-187  (act=187)   mpx= 2 spx= 2
  <specn stmt> ::= <implicit typestmt>
pass= 1  prod# +mai-170  (act=170)   mpx= 2 spx= 3
  <specn statement> ::= <specn stmt> end_of_statement
pass= 1  prod# +mai-58   (act=58)    mpx= 2 spx= 2
  <accum unambig spec part> ::= <specn statement>
pass= 1  prod# .dcl-256  (act=656)   mpx= 3 spx= 3
  <target kwd> ::= TARGET
pass= 1  prod# -exp-264  (act=2163)  mpx= 5 spx= 5
  <identifier> ::= IDENTIFIER
pass= 1  prod# .dcl-254  (act=654)   mpx= 5 spx= 5
  <target dcl> ::= <identifier>
pass= 1  prod# .dcl-252  (act=652)   mpx= 3 spx= 5
  <target stmt> ::= <target kwd> COLON2 <target dcl>
pass= 1  prod# +mai-202  (act=202)   mpx= 3 spx= 3
  <specn2 stmt> ::= <target stmt>
pass= 1  prod# +mai-177  (act=177)   mpx= 3 spx= 4
  <specn2 statement> ::= <specn2 stmt> end_of_statement
pass= 1  prod# +mai-60   (act=60)    mpx= 2 spx= 3
  <accum unambig spec part> ::= <accum unambig spec part> <specn2 statement>
pass= 1  prod# %stm-233  (act=1440)  mpx= 3 spx= 3
  <save kwd> ::= SAVE
pass= 1  prod# -exp-264  (act=2163)  mpx= 5 spx= 5
  <identifier> ::= IDENTIFIER
pass= 1  prod# %stm-239  (act=1446)  mpx= 5 spx= 5
  <save element> ::= <identifier>
pass= 1  prod# %stm-236  (act=1443)  mpx= 3 spx= 5
  <save stmt> ::= <save kwd> COLON2 <save element>
pass= 1  prod# +mai-209  (act=209)   mpx= 3 spx= 3
  <specn2 stmt> ::= <save stmt>
pass= 1  prod# +mai-177  (act=177)   mpx= 3 spx= 4
  <specn2 statement> ::= <specn2 stmt> end_of_statement
  <accum unambig spec part> ::= <accum unambig spec part> <specn2 statement>
pass= 1  prod# +mai-56   (act=56)    mpx= 2 spx= 2
  <specification part> ::= <accum unambig spec part>
pass= 1  prod# +mai-76   (act=76)    mpx= 2 spx= 2
  <all specification> ::= <specification part>
pass= 1  prod# +mai-79   (act=79)    mpx= 1 spx= 2
  <program beginning> ::= <specification beg> <all specification>
pass= 1  prod# +mai-13   (act=13)    mpx= 2 spx= 2
  <end stmt> ::= END
pass= 1  prod# +mai-11   (act=11)    mpx= 2 spx= 2
  <end statement> ::= <end stmt>
pass= 1  prod# +mai-7    (act=7)     mpx= 1 spx= 2
  <program> ::= <program beginning> <end statement>
pass= 1  prod# +mai-1    (act=1)     mpx= 1 spx= 1
  <parser goal> ::= <program>
 
 
pass= 2  compilation-unit= 1
pass= 2  prod# +mai-41   (act=41)    mpx= 1 spx= 0
  <program init stmt> ::=
pass= 2  prod# +mai-36   (act=36)    mpx= 1 spx= 2
  <program prefix> ::= <program init stmt> END_START_OPTIONS
pass= 2  prod# +mai-45   (act=45)    mpx= 1 spx= 1
  <program prefix part> ::= <program prefix>
pass= 2  prod# +mai-50   (act=50)    mpx= 1 spx= 1
  <program header part> ::= <program prefix part>
pass= 2  prod# +mai-55   (act=55)    mpx= 1 spx= 1
  <specification beg> ::= <program header part>
pass= 2  prod# .dcl-181  (act=581)   mpx= 2 spx= 2
  <implicit kwd> ::= IMPLICIT
pass= 2  prod# .dcl-521  (act=921)   mpx= 3 spx= 3
  <type keyword> ::= CHARACTER
pass= 2  prod# .dcl-542  (act=942)   mpx= 5 spx= 6
  <type kind ceq> ::= CHARLEN equals
pass= 2  prod# .dcl-535  (act=935)   mpx= 6 spx= 6
  <exporstarorcol> ::= colon
pass= 2  prod# .dcl-537  (act=937)   mpx= 4 spx= 7
  <type kind> ::= lparen <type kind ceq> <exporstarorcol> rparen
pass= 2  prod# .dcl-461  (act=861)   mpx= 3 spx= 4
  <type kwd unit> ::= <type keyword> <type kind>
pass= 2  prod# .dcl-176  (act=576)   mpx= 3 spx= 7
  <implied unit head> ::= <type kwd unit> lparen IDENTIFIER minus IDENTIFIER
pass= 2  prod# .dcl-174  (act=574)   mpx= 3 spx= 4
  <implied> ::= <implied unit head> rparen
pass= 2  prod# .dcl-172  (act=572)   mpx= 2 spx= 3
  <implicit typestmt> ::= <implicit kwd> <implied>
pass= 2  prod# +mai-187  (act=187)   mpx= 2 spx= 2
  <specn stmt> ::= <implicit typestmt>
pass= 2  prod# +mai-170  (act=170)   mpx= 2 spx= 3
  <specn statement> ::= <specn stmt> end_of_statement
pass= 2  prod# +mai-58   (act=58)    mpx= 2 spx= 2
  <accum unambig spec part> ::= <specn statement>
pass= 2  prod# .dcl-256  (act=656)   mpx= 3 spx= 3
  <target kwd> ::= TARGET
pass= 2  prod# -exp-264  (act=2163)  mpx= 4 spx= 4
  <identifier> ::= IDENTIFIER
pass= 2  prod# .dcl-254  (act=654)   mpx= 4 spx= 4
  <target dcl> ::= <identifier>
pass= 2  prod# .dcl-251  (act=651)   mpx= 3 spx= 4
  <target stmt> ::= <target kwd> <target dcl>
pass= 2  prod# +mai-202  (act=202)   mpx= 3 spx= 3
  <specn2 stmt> ::= <target stmt>
pass= 2  prod# +mai-177  (act=177)   mpx= 3 spx= 4
  <specn2 statement> ::= <specn2 stmt> end_of_statement
pass= 2  prod# +mai-60   (act=60)    mpx= 2 spx= 3
  <accum unambig spec part> ::= <accum unambig spec part> <specn2 statement>
pass= 2  prod# %stm-233  (act=1440)  mpx= 3 spx= 3
  <save kwd> ::= SAVE
pass= 2  prod# -exp-264  (act=2163)  mpx= 4 spx= 4
  <identifier> ::= IDENTIFIER
pass= 2  prod# %stm-239  (act=1446)  mpx= 4 spx= 4
  <save element> ::= <identifier>
pass= 2  prod# %stm-235  (act=1442)  mpx= 3 spx= 4
  <save stmt> ::= <save kwd> <save element>
pass= 2  prod# +mai-209  (act=209)   mpx= 3 spx= 3
  <specn2 stmt> ::= <save stmt>
pass= 2  prod# +mai-177  (act=177)   mpx= 3 spx= 4
  <specn2 statement> ::= <specn2 stmt> end_of_statement
pass= 2  prod# +mai-60   (act=60)    mpx= 2 spx= 3
  <accum unambig spec part> ::= <accum unambig spec part> <specn2 statement>
pass= 2  prod# +mai-56   (act=56)    mpx= 2 spx= 2
  <specification part> ::= <accum unambig spec part>
pass= 2  prod# +mai-76   (act=76)    mpx= 2 spx= 2
  <all specification> ::= <specification part>
pass= 2  prod# +mai-79   (act=79)    mpx= 1 spx= 2
  <program beginning> ::= <specification beg> <all specification>
pass= 2  prod# +mai-13   (act=13)    mpx= 2 spx= 2
  <end stmt> ::= END
pass= 2  prod# +mai-11   (act=11)    mpx= 2 spx= 2
  <end statement> ::= <end stmt>
pass= 2  prod# +mai-7    (act=7)     mpx= 1 spx= 2
  <program> ::= <program beginning> <end statement>
pass= 2  prod# +mai-1    (act=1)     mpx= 1 spx= 1
  <parser goal> ::= <program>
 
 
pass= 3  compilation-unit= 1
pass= 3  prod# +mai-41   (act=41)    mpx= 1 spx= 0
  <program init stmt> ::=
pass= 3  prod# +mai-36   (act=36)    mpx= 1 spx= 2
  <program prefix> ::= <program init stmt> END_START_OPTIONS
pass= 3  prod# +mai-45   (act=45)    mpx= 1 spx= 1
  <program prefix part> ::= <program prefix>
pass= 3  prod# +mai-50   (act=50)    mpx= 1 spx= 1
  <program header part> ::= <program prefix part>
pass= 3  prod# +mai-80   (act=80)    mpx= 1 spx= 1
  <program beginning> ::= <program header part>
pass= 3  prod# +mai-13   (act=13)    mpx= 2 spx= 2
  <end stmt> ::= END
pass= 3  prod# +mai-11   (act=11)    mpx= 2 spx= 2
  <end statement> ::= <end stmt>
pass= 3  prod# +mai-7    (act=7)     mpx= 1 spx= 2
  <program> ::= <program beginning> <end statement>
pass= 3  prod# +mai-1    (act=1)     mpx= 1 spx= 1
= errorcl..51 errorfe..58 impldcl..000013DC mapitem..118 dr_map..000028C0 map_dic..174 p3_fmai..148
      process_non_terminal3..804 pass3..720 get_fpo..105 ftphas1..93 dophase..375 ftroot..111 ftmain..317 f8ent..52
      ..00000240
= errorcl..51 errorfe..58 impldcl..000013DC mapitem..118 dr_map..000027C0 map_dic..174 p3_fmai..148
      process_non_terminal3..804 pass3..720 get_fpo..105 ftphas1..93 dophase..375 ftroot..111 ftmain..317 f8ent..52
      ..00000240
  <parser goal> ::= <program>
 
 
pass= 4  compilation-unit= 1
pass= 4  prod# +mai-41   (act=41)    mpx= 1 spx= 0
  <program init stmt> ::=
pass= 4  prod# +mai-36   (act=36)    mpx= 1 spx= 2
  <program prefix> ::= <program init stmt> END_START_OPTIONS
pass= 4  prod# +mai-45   (act=45)    mpx= 1 spx= 1
  <program prefix part> ::= <program prefix>
pass= 4  prod# +mai-50   (act=50)    mpx= 1 spx= 1
  <program header part> ::= <program prefix part>
pass= 4  prod# +mai-80   (act=80)    mpx= 1 spx= 1
  <program beginning> ::= <program header part>
pass= 4  prod# +mai-13   (act=13)    mpx= 2 spx= 2
  <end stmt> ::= END
pass= 4  prod# +mai-11   (act=11)    mpx= 2 spx= 2
  <end statement> ::= <end stmt>
pass= 4  prod# +mai-7    (act=7)     mpx= 1 spx= 2
  <program> ::= <program beginning> <end statement>
pass= 4  prod# +mai-1    (act=1)     mpx= 1 spx= 1
  <parser goal> ::= <program>
 "deferlen13.f", 1514-704 (S) Entity char2 is declared with a deferred type parameter. char2 must have the POINTER or ALLOCATABLE attribute.
 "deferlen13.f", 1514-704 (S) Entity char1 is declared with a deferred type parameter. char1 must have the POINTER or ALLOCATABLE attribute.
** _main   === End of Compilation 1 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<
 
 
>>>>> OBJECT SECTION <<<<<
 
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    deferlen13.f                02/20/06   21:47:31
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    2           0         2           0          0            0
 
 
    Source records read.......................................      26
1501-511  Compilation failed for file deferlen13.f.
1501-544  Object file not created.
