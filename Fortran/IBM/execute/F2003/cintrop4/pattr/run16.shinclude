! Replacing fxmdvn04.sh

#CMD    = XLC_COMPILE
#IF on(aix)
  #OPTS   = $(C_COMPILER_OPTS) $(OPT_BIGGER_LONG_DOUBLE) $(OPT_SET_LANG_LEVEL_STDC99) -lC128
#ELSE
  #OPTS   = $(C_COMPILER_OPTS) -qdebug=aixldbl128 $(OPT_SET_LANG_LEVEL_STDC99) -lC128
#ENDIF
#INPUT  = $(tcasedir)$CTCARG.c
#OUTPUT = $CTCARG$(OBJ)
#ENDCMD

#CMD    = XLF95_COMPILE
#INPUT  = $(tcasedir)assertmodule.f
#OUTPUT = assertmodule$(OBJ)
#ENDCMD

#CMD    = XLF95_COMPILE
#INPUT  = $(tcasedir)$FTCARG.f
#OUTPUT = $FTCARG$(OBJ)
#ENDCMD

#CMD    = XLF95_LINK
#INPUT  = $CTCARG$(OBJ) assertmodule$(OBJ) $FTCARG$(OBJ)
#OUTPUT = $FTCARG$(EXE)
#ENDCMD

#CMD    = RUN
#INPUT  = $FTCARG$(EXE)
#ENDCMD

#IF !on(aix)
! This following chunk of code is to enable GCC testing on machines with gcc4+
! installed.  If the gcc level is below this, the test will pull in empty
! files for testing.  Essentially a NOOP test, which preserves the behaviour
! of the original test.  Note that the object files created preserve the 
! original testcase name.
! This implementation is used to bypass the inability of TD2 to do processing
! on the client side.
  #CMD    = WHICH_FILE
  #ENVAR  = FILE_SRC=$(tcasedir)
  #INPUT  = TARGET:ctest.c gcc4:$CTCARG.c DEFAULT:empty.c
  #ENDCMD

  #CMD    = WHICH_FILE
  #ENVAR  = FILE_SRC=$(tcasedir)
  #INPUT  = TARGET:ftest.f gcc4:$FTCARG.f DEFAULT:empty.f
  #ENDCMD

! Can't use an empty file for assertmodule.f, as linking will fail with
! more than 1 empty Fortran object.
  #CMD    = COPY
  #INPUT  = $(tcasedir)assertmodule.f .
  #ENDCMD

  #CMD    = GCC_COMPILE
  #OPTS   = $(GCC_COMPILER_OPTS) $(OPT_GCC_LONG_DOUBLE) -std=c99 -lC128
  #INPUT  = ctest.c
  #OUTPUT = $CTCARG$(OBJ)
  #ENDCMD

  #CMD    = XLF95_COMPILE
  #INPUT  = assertmodule.f
  #OUTPUT = assertmodule$(OBJ)
  #ENDCMD

  #CMD    = XLF95_COMPILE
  #INPUT  = ftest.f 
  #OUTPUT = $FTCARG$(OBJ)
  #ENDCMD

  #CMD    = XLF95_LINK
  #INPUT  = $CTCARG$(OBJ) assertmodule$(OBJ) $FTCARG$(OBJ)
  #OUTPUT = $FTCARG$(EXE)
  #ENDCMD

  #CMD    = RUN
  #INPUT  = $FTCARG$(EXE)
  #ENDCMD
#ENDIF
